{"version":3,"sources":["components/InputField.jsx","components/ToggleCompleted.jsx","components/TodoItem.jsx","components/TodoList.jsx","components/FilterButtons.jsx","App.js","index.js"],"names":["InputField","state","title","handleInput","event","value","target","_this","setState","handleSubmit","preventDefault","props","addNewTodo","this","react_default","a","createElement","onSubmit","name","onChange","className","placeholder","React","Component","ToggleCompleted","_ref","toggleAll","type","id","htmlFor","TodoItem","deleteItem","todo","toggleChecked","completed","checked","onClick","TodoList","filteredTodos","map","components_TodoItem","key","FilterButtons","handleFilter","href","App","todoList","count","text","todoItem","prevState","todos","concat","Object","toConsumableArray","countUncompletedTodos","filter","item","length","deleteAllCompletedTodos","uncompletedTodos","taskId","withoutRemovedItems","filterBy","objectSpread","every","_this$state","components_InputField","style","display","components_ToggleCompleted","components_TodoList","components_FilterButtons","some","ReactDOM","render","src_App","document","getElementById"],"mappings":"iRA0CeA,6MAvCbC,MAAQ,CACNC,MAAO,MAGTC,YAAc,SAACC,GAAU,IAChBC,EAASD,EAAME,OAAfD,MAEPE,EAAKC,SAAS,CACZN,MAAOG,OAIXI,aAAe,SAACL,GACdA,EAAMM,iBAENH,EAAKI,MAAMC,WAAWL,EAAKN,MAAMC,OAEjCK,EAAKC,SAAS,CACZN,MAAO,8EAIF,IACAA,EAASW,KAAKZ,MAAdC,MAEP,OACEY,EAAAC,EAAAC,cAAA,QAAMC,SAAUJ,KAAKJ,cACnBK,EAAAC,EAAAC,cAAA,SACEE,KAAK,OACLb,MAAOH,EACPiB,SAAUN,KAAKV,YACfiB,UAAU,WACVC,YAAY,mCAjCGC,IAAMC,WCiBhBC,EAjBS,SAAAC,GAAiB,IAAfC,EAAeD,EAAfC,UACxB,OACEZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEW,KAAK,WACLC,GAAG,aACHR,UAAU,aACVD,SAAUO,IAEZZ,EAAAC,EAAAC,cAAA,SACAa,QAAQ,cADR,0BCgBSC,EAzBE,SAAAL,GAAyC,IAAtCM,EAAsCN,EAAtCM,WAAYC,EAA0BP,EAA1BO,KAAMC,EAAoBR,EAApBQ,cAEpC,OACEnB,EAAAC,EAAAC,cAAA,MAAII,UAAWY,EAAKE,UAAY,YAAc,IAC5CpB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,SACEW,KAAK,WACLP,UAAU,SACVQ,GAAII,EAAKJ,GACTO,QAASH,EAAKE,UACdf,SAAU,kBAAMc,EAAcD,EAAKJ,OAErCd,EAAAC,EAAAC,cAAA,SAAOa,QAASG,EAAKJ,IAClBI,EAAK9B,OAERY,EAAAC,EAAAC,cAAA,UACEW,KAAK,SACLP,UAAU,UACVgB,QAAS,kBAAML,EAAWC,EAAKJ,UCH1BS,EAdE,SAAAZ,GAAA,IAAGa,EAAHb,EAAGa,cAAeL,EAAlBR,EAAkBQ,cAAeF,EAAjCN,EAAiCM,WAAjC,OACfjB,EAAAC,EAAAC,cAAA,MAAII,UAAU,aACTkB,EAAcC,IAAI,SAAAP,GAAI,OACvBlB,EAAAC,EAAAC,cAACwB,EAAD,CACEC,IAAKT,EAAKJ,GACVI,KAAMA,EACNC,cAAeA,EACfF,WAAYA,QCwBLW,EAhCO,SAAAjB,GAAoB,IAAlBkB,EAAkBlB,EAAlBkB,aACtB,OACE7B,EAAAC,EAAAC,cAAA,MAAII,UAAU,WACZN,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACE4B,KAAK,KACLxB,UAAU,WACVgB,QAAS,kBAAMO,EAAa,SAH9B,QASF7B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAG4B,KAAK,WAAWR,QAAS,kBAAMO,EAAa,YAA/C,WAKF7B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACE4B,KAAK,cACLR,QAAS,kBAAMO,EAAa,eAF9B,gBCiIOE,6MAhJb5C,MAAQ,CACN6C,SAAU,GACVR,cAAe,GACfS,MAAO,KAGTnC,WAAa,SAAAoC,GACX,IAAMC,EAAW,CACf/C,MAAO8C,EACPpB,GAAIrB,EAAKN,MAAM8C,MACfb,WAAW,GAGb3B,EAAKC,SAAS,SAAA0C,GACZ,IAAMC,EAAK,GAAAC,OAAAC,OAAAC,EAAA,EAAAD,CAAOH,EAAUJ,UAAjB,CAA2BG,IACtC,MAAO,CACLH,SAAUK,EACVb,cAAea,EACfJ,MAAOG,EAAUH,MAAQ,QAK/BQ,sBAAwB,WACtB,OAAOhD,EAAKN,MAAM6C,SACfU,OAAO,SAAAC,GAAI,OAAuB,IAAnBA,EAAKvB,YAAqBwB,UAG9CC,wBAA0B,WACxBpD,EAAKC,SAAS,SAAA0C,GACZ,IAAMU,EAAmBV,EAAUJ,SAChCU,OAAO,SAAAC,GAAI,OAAuB,IAAnBA,EAAKvB,YAEvB,MAAO,CACLY,SAASO,OAAAC,EAAA,EAAAD,CAAKO,GACdtB,cAAce,OAAAC,EAAA,EAAAD,CAAKO,SAMzB7B,WAAa,SAAA8B,GACXtD,EAAKC,SAAS,SAAA0C,GACZ,IAAMY,EAAsBZ,EAAUJ,SAASU,OAAO,SAAAC,GAAI,OAAIA,EAAK7B,KAAOiC,IAExE,MAAO,CACLf,SAASO,OAAAC,EAAA,EAAAD,CAAKS,GACdxB,cAAce,OAAAC,EAAA,EAAAD,CAAKS,SAK3BnB,aAAe,SAAAoB,GACbxD,EAAKC,SAAS,SAAA0C,GAAS,MAAK,CAC1BZ,cAAeY,EAAUJ,SAASU,OAAO,SAAAC,GACvC,OAAQM,GACN,IAAK,YACH,OAAON,EAAKvB,UAEd,IAAK,SACH,OAAQuB,EAAKvB,UAEf,QACE,OAAOuB,WAMjB/B,UAAY,WACVnB,EAAKC,SAAS,SAAA0C,GACZ,IAAMC,EAAQD,EAAUJ,SAASP,IAAI,SAAAP,GAAI,OAAAqB,OAAAW,EAAA,EAAAX,CAAA,GACpCrB,EADoC,CAEvCE,WAAYgB,EAAUJ,SAASmB,MAAM,SAAAjC,GAAI,OAAIA,EAAKE,gBAGpD,MAAO,CACLY,SAAUK,EACVb,cAAea,QAKrBlB,cAAgB,SAAA4B,GACdtD,EAAKC,SAAS,SAAA0C,GACZ,IAAMC,EAAQD,EAAUJ,SAASP,IAAI,SAAAP,GACnC,OAAOA,EAAKJ,KAAOiC,EAAZR,OAAAW,EAAA,EAAAX,CAAA,GAEErB,EAFF,CAGDE,WAAYF,EAAKE,YAEnBF,IAGN,MAAO,CACLc,SAAUK,EACVb,cAAea,8EAKZ,IAAAe,EAC6BrD,KAAKZ,MAAjC6C,EADDoB,EACCpB,SAAUR,EADX4B,EACW5B,cACZiB,EAAwB1C,KAAK0C,wBAEnC,OACEzC,EAAAC,EAAAC,cAAA,WAASI,UAAU,WACjBN,EAAAC,EAAAC,cAAA,UAAQI,UAAU,UAChBN,EAAAC,EAAAC,cAAA,mBAEAF,EAAAC,EAAAC,cAACmD,EAAD,CAAYvD,WAAYC,KAAKD,cAG/BE,EAAAC,EAAAC,cAAA,WAASI,UAAU,OAAOgD,MAAO,CAAEC,QAAS,UAC1CvD,EAAAC,EAAAC,cAACsD,EAAD,CAAiB5C,UAAWb,KAAKa,YAEjCZ,EAAAC,EAAAC,cAACuD,EAAD,CACEjC,cAAeA,EACfL,cAAepB,KAAKoB,cACpBF,WAAYlB,KAAKkB,cAIrBjB,EAAAC,EAAAC,cAAA,UAAQI,UAAU,SAASgD,MAAO,CAAEC,QAAS,UAC3CvD,EAAAC,EAAAC,cAAA,QAAMI,UAAU,cACbmC,EADH,eAIAzC,EAAAC,EAAAC,cAACwD,EAAD,CAAe7B,aAAc9B,KAAK8B,eAElC7B,EAAAC,EAAAC,cAAA,UACEW,KAAK,SACLP,UAAU,kBACVgD,MAAO,CAAEC,QAAS,SAClBjC,QAASvB,KAAK8C,yBAEbb,EAAS2B,KAAK,SAAAzC,GAAI,OAAuB,IAAnBA,EAAKE,aAAuB,4BAzI7CX,aCAlBmD,IAASC,OACP7D,EAAAC,EAAAC,cAAC4D,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.74614b99.chunk.js","sourcesContent":["import React from 'react'\n\nclass InputField extends React.Component {\n  state = {\n    title: '',\n  }\n\n  handleInput = (event) => {\n    const {value} = event.target;\n\n    this.setState({\n      title: value,\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.props.addNewTodo(this.state.title);\n\n    this.setState({\n      title: '',\n    })\n  }\n\n  render() {\n    const {title} = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          name='todo'\n          value={title}\n          onChange={this.handleInput}\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n        />\n      </form>\n    )\n  }\n}\n\nexport default InputField","import React from 'react'\n\nconst ToggleCompleted = ({toggleAll}) => {\n  return (\n    <div>\n      <input \n        type=\"checkbox\" \n        id=\"toggle-all\" \n        className=\"toggle-all\" \n        onChange={toggleAll}\n        />\n      <label \n      htmlFor=\"toggle-all\">\n        Mark all as complete\n      </label>\n    </div>\n  )\n}\n\nexport default ToggleCompleted","import React from 'react'\n\nconst TodoItem = ({ deleteItem, todo, toggleChecked }) => {\n\n  return (\n    <li className={todo.completed ? 'completed' : ''}>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={todo.id}\n          checked={todo.completed}\n          onChange={() => toggleChecked(todo.id)}\n        />\n        <label htmlFor={todo.id}>\n          {todo.title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => deleteItem(todo.id)}\n        />\n      </div>\n    </li>\n  )\n}\n\nexport default TodoItem","import React from 'react'\nimport TodoItem from './TodoItem'\n\nconst TodoList = ({ filteredTodos, toggleChecked, deleteItem }) => (\n  <ul className=\"todo-list\">\n      {filteredTodos.map(todo => (\n      <TodoItem \n        key={todo.id}\n        todo={todo}\n        toggleChecked={toggleChecked}\n        deleteItem={deleteItem}\n      />\n    ))}\n  </ul>\n\n)\n\nexport default TodoList","import React from 'react'\n\nconst FilterButtons = ({handleFilter}) => {\n  return (\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className=\"selected\"\n          onClick={() => handleFilter('All')}\n        >\n          All\n        </a>\n      </li>\n    \n      <li>\n        <a href=\"#/active\" onClick={() => handleFilter('Active')}>\n          Active\n        </a>\n      </li>\n    \n      <li>\n        <a\n          href=\"#/completed\"\n          onClick={() => handleFilter('Completed')}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n  )\n\n}\n\nexport default FilterButtons","import React, { Component } from 'react';\nimport InputField from './components/InputField';\nimport ToggleCompleted from './components/ToggleCompleted';\nimport TodoList from './components/TodoList';\nimport FilterButtons from './components/FilterButtons';\n\nclass App extends Component {\n  state = {\n    todoList: [],\n    filteredTodos: [],\n    count: 1\n  };\n\n  addNewTodo = text => {\n    const todoItem = {\n      title: text,\n      id: this.state.count,\n      completed: false,\n    };\n\n    this.setState(prevState => {\n      const todos = [...prevState.todoList, todoItem];\n      return {\n        todoList: todos,\n        filteredTodos: todos,\n        count: prevState.count + 1,\n      };\n    });\n  };\n\n  countUncompletedTodos = () => {\n    return this.state.todoList\n      .filter(item => item.completed === false).length;\n  };\n\n  deleteAllCompletedTodos = () => {\n    this.setState(prevState => {\n      const uncompletedTodos = prevState.todoList\n        .filter(item => item.completed === false);\n\n      return {\n        todoList: [...uncompletedTodos],\n        filteredTodos: [...uncompletedTodos],\n      }\n\n    })\n  };\n\n  deleteItem = taskId => {\n    this.setState(prevState => {\n      const withoutRemovedItems = prevState.todoList.filter(item => item.id !== taskId);\n      \n        return {\n          todoList: [...withoutRemovedItems],\n          filteredTodos: [...withoutRemovedItems],\n        }\n    })\n  }\n\n  handleFilter = filterBy => {\n    this.setState(prevState => ({\n      filteredTodos: prevState.todoList.filter(item => {\n        switch (filterBy) {\n          case 'Completed':\n            return item.completed;\n\n          case 'Active':\n            return !item.completed;\n\n          default:\n            return item;\n        }\n      })\n    }));\n  };\n\n  toggleAll = () => {\n    this.setState(prevState => {\n      const todos = prevState.todoList.map(todo => ({\n        ...todo,\n        completed: !prevState.todoList.every(todo => todo.completed)\n      }));\n\n      return {\n        todoList: todos,\n        filteredTodos: todos,\n      };\n    });\n  };\n\n  toggleChecked = taskId => {\n    this.setState(prevState => {\n      const todos = prevState.todoList.map(todo => {\n        return todo.id === taskId\n          ? {\n              ...todo,\n              completed: !todo.completed\n            }\n          : todo;\n      });\n\n      return {\n        todoList: todos,\n        filteredTodos: todos,\n      };\n    });\n  };\n\n  render() {\n    const { todoList, filteredTodos } = this.state;\n    const countUncompletedTodos = this.countUncompletedTodos();\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <InputField addNewTodo={this.addNewTodo} />\n        </header>\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <ToggleCompleted toggleAll={this.toggleAll} />\n\n          <TodoList\n            filteredTodos={filteredTodos}\n            toggleChecked={this.toggleChecked}\n            deleteItem={this.deleteItem}\n          />\n        </section>\n\n        <footer className=\"footer\" style={{ display: 'block' }}>\n          <span className=\"todo-count\">\n            {countUncompletedTodos} items left\n          </span>\n\n          <FilterButtons handleFilter={this.handleFilter} />\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            style={{ display: 'block' }}\n            onClick={this.deleteAllCompletedTodos}\n          >\n            {todoList.some(todo => todo.completed === true) && 'Clear Completed'}\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}